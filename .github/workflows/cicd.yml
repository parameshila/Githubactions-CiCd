name: CI/CD for ECS application

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Adjust based on your branch strategy

env:
  AWS_REGION: "us-east-1"
  IMAGE_REPO_NAME: "github-action-cicd"
  IMAGE_TAG: "latest"

jobs:
  notify-start:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Assume OIDC role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: githuboidctest
          
      - name: Notify SNS on Build Start
        run: |
          aws sns publish 
            --region $AWS_REGION \
            --topic-arn ${{ secrets.SNS_TOPIC_ARN }} \
            --message "GitHub Actions Build Started for Repository: ${{ github.repository }} on Branch: ${{ github.ref }} by ${{ github.actor }}" \
            --subject "GitHub Actions"
  build:
    #permissions:
      #contents: read
    runs-on: ubuntu-latest
    needs: notify-start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: checking context variable
        run: |
          echo "Repository name: ${{ github.repository }} "
          echo "Workflow name: ${{ github.workflow }} "
          echo "Triggered by:  ${{ github.triggering_actor }}"


  s3-push:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Create File and Add Content
        run: |
          echo "This is a test file created by GitHub Actions." > test.txt
          echo "Timestamp: $(date)" >> test.txt
          cat test.txt
      - name: Assume OIDC role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: githuboidctest

      - name: Mask AWS ROLE ARN
        run: echo "::add-mask::${{ secrets.AWS_ROLE_ARN }}"
        
      - name: Mask AWS Account ID
        run: echo "::add-mask::${{ secrets.AWS_ACCOUNT_ID }}"
          
      - name: Upload File to S3
        run: |
          aws s3 cp test.txt s3://devops-artifact-bkt/test.txt
          
  ecr-push:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write  # Ensure this permission is available for OIDC authentication
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Assume OIDC role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: githuboidctest

      - name: Mask AWS ROLE ARN
        run: echo "::add-mask::${{ secrets.AWS_ROLE_ARN }}"
        
      - name: Mask AWS Account ID
        run: echo "::add-mask::${{ secrets.AWS_ACCOUNT_ID }}"
        
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} .
          docker tag ${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}
